# This workflow will trigger unit tests

name: Test Python Project

on:
  push:
    branches:
      - main
      - 02_establish-py-unit-tests

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  lint:
    if: github.repository == 'main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Lint with ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
          # default set of ruff rules with GitHub Annotations
          ruff --format=github --target-version=py37 .
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Test with python unittest
        run: |
          # go to unittest directory
          cd /test/unittests
          # run unittests for data and models
          python -m unittest discover -s data-and-models
