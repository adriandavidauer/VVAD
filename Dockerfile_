# Set python version
FROM python:3.7
LABEL authors="kzanaty"

RUN apt-get update
RUN apt-get install git ffmpeg -y

RUN python -m pip install --upgrad pip
# anything else to install?

# set work directory
WORKDIR /home

# create folder for dataset output and tmp files
RUN mkdir dataset output tmp

# clone repository to get code







FROM tensorflow/tensorflow:1.13.1-gpu  AS base
LABEL authors="kzanaty"
# ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/gluster/public/cudadrv/lib64

# Install and start of training
FROM base AS training_dependencies
RUN apt-get update
# RUN apt-get install git ffmpeg -y


RUN python -m pip install --upgrade pip
RUN python -m pip install numpy

# Seaborn is only needed for evaluation
# RUN python -m pip install seaborn tensorflow[and-cuda]
#
#RUN apt-get remove -y cuda-* \
#    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends cuda-11-5

#RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends libcudnn8=8.3.3*-1+cuda11.5

#RUN apt-get install nano -y

#RUN apt-get clean \
#    && rm -rf /var/lib/apt/lists/*

FROM training_dependencies AS training
# ARG REBUILDING=unknown

WORKDIR /home
# RUN mkdir dataset output tmp
# RUN git clone https://github.com/cedric-cfk/paz.git && cd paz && git checkout Training && cd ..

# WORKDIR /home/paz
#RUN python3 /home/paz/setup.py install -q
# RUN python3 -m pip install --no-deps .

# export TF_FORCE_GPU_ALLOW_GROWTH='true'
#RUN CUDNN_PATH=$(dirname $(python -c "import nvidia.cudnn;print(nvidia.cudnn.__file__)")) \
#    && export LD_LIBRARY_PATH=/usr/local/cuda-11.5/lib64:/usr/local/cuda-11.5/include:$CONDA_PREFIX/lib/:$CUDNN_PATH/lib:/usr/local/lib/python3.8/dist-packages/tensorrt_libs/:$LD_LIBRARY_PATH
#
#RUN ln -s /usr/local/lib/python3.11/dist-packages/tensorrt_libs/libnvinfer.so.8 /usr/local/lib/python3.11/dist-packages/tensorrt_libs/libnvinfer.so.7 \
#    && ln -s /usr/local/lib/python3.11/dist-packages/tensorrt_libs/libnvinfer_plugin.so.8 /usr/local/lib/python3.11/dist-packages/tensorrt_libs/libnvinfer_plugin.so.7

RUN echo "test"


#ENTRYPOINT ["python3", "/home/paz/examples/visual_voice_activity_detection/train.py"]
#ENTRYPOINT ["python3", "/home/paz/examples/vvad/train_v2.py"]